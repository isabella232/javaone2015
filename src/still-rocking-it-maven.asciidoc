=  Still Rocking It: A Dozen Demos and Great News for Apache Maven Users
:title: Still Rocking It: A Dozen or More Demos and Great News for Apache Maven Users
:Author:  Jason van Zyl and  Manfred Moser 
:Date: October 2015
:max-width: 45em
:icons:
:copyright: Copyright 2015-present, Takari and simpligility, All Rights Reserved.
:incremental:

== Apache Maven - Still Rocking It
:incremental!:

[quote]
A Dozen Demos and Great News for Apache Maven Users

Jason van Zyl 

* Apache Maven Founder / http://twitter.com/jvanzyl[#jvanzyl]  / http://www.takari.io[www.takari.io]

Manfred Moser

* Apache Maven Committer and Trainer / http://twitter.com/simpligility[#simpligility] / http://www.simpligility.com[www.simpligility.com]

TIP: Hold on tight, this is going to be a wild ride!

== What Are You Going to Learn? 

* Tips & tricks
* Best practices
* New tools, plugins, ...

== Before We Get Started 
:incremental!:

* Maven is opinionated...
* And so are the developers!
* Follow best practices, to make your life easier
* Maven is open source
* Work happens on latest code
* Old releases receive no attention or support

TIP: Don't worry! It's not that bad at all.

== Do NOT Use Old Maven Versions
:incremental:

* Maven 1 - doh!
* Maven 2 - seriously, just don't do it
* Maven Ant Tasks - based on Maven 2 and unmaintained
* Maven 3.0.x - old but stable != should be used
* Maven 3.1.x - old with issues ! = should be used
* Maven 3.2.x - new but not latest supported ! = should be used

-> Unless you are prepared to maintain those projects yourself, use Maven 3.3.3

== Avoid Other Old Stuff 
:incremental!:

Be careful about

* IDEs using old Maven versions
* Using different version on command line / CI server
* Old IDE plugins
* Old Maven plugins
* JDK 4, 5, 6, and 7 usage

== Now Let's Get Started
:incremental!:

* Simplify project build
* Control project build
* Improve development
* And build performance
* And much more

== Where Are We At?

* Apache Maven 3.3.3
* Apache Maven Plugins - require 3+
* Java 1.7+ for build execution
* Codehaus Plugins migrated to http://www.mojohaus.org/[MojoHaus]

== Misc Newer Features

* JSR330 for extensions and plugin
* Transitive dependency excludes
* Pluggable reactor
* Version values allow `${revision}`, `${sha1}`, `${changelist}`
* Version ranges in parent
* Central Repository defaults to HTTPS

== Maven Wrapper
:incremental!:

* Unix and Windows scripts 
* Within project structure
* Automatic download and install of Maven
* Uses `~/.m2/wrapper`
* Removes need to provision Maven
* For developer and CI server provisioning
* Specifies Maven version


== Maven Wrapper
:incremental!:

----
mvn -N io.takari:maven:wrapper
----

And then just use similar commands to 

----
./mvnw clean install
mvn.bat clean install
----


== .mvn Configuration
:incremental!:

* Project-local configuration folder
* Therefore version controlled with source
* Maven 3.3.1+
* Controls how project is built
* Allows for extension loading

== .mvn JVM Configuration
:incremental!:

* `.mvn/jvm.config`
* No more global `MAVEN_OPTS`

----
TBD
----

== .mvn Maven Configuration
:incremental!:

* `.mvn/maven.config`
* Maven invocation parameters

----
--T 8
--builder smart
--U
----

== Core Extensions
:incremental!:

Allow different Maven behavior e.g. 

* Parse pom in different syntax - Polyglot Maven 
* Different behavior for local repo access
* Reactor ordering

== Core Extensions
 
`.mvn/extensions.xml`:

----
TBD
----

== Control Your Tools
:incremental!:

Beyond wrapper and .mvn

* Control plugin versions 
** e.g. extend https://github.com/simpligility/progressive-organization-pom[progressive-organization-pom]
** various Maven controlled parents
* Use http://maven.apache.org/enforcer/maven-enforcer-plugin/[Enforcer plugin]
** with standard or http://www.mojohaus.org/extra-enforcer-rules/[extra rules]
** or write your own rules

== Extensions Examples
:incremental!:

* Concurrent repo access
* Smart builder

== Reactor Improvements
:incremental!:

Traditional Parallel

----
mvn -T 4 clean deploy
----

Takari Smart Builder

----
mvn clean deploy --builder smart -T4
----

== Example Polyglot Maven
:incremental!:

links and more

https://github.com/takari/polyglot-maven-examples

https://github.com/jruby/jruby[JRuby]  - build example 

https://bitbucket.org/asomov/snakeyaml/src[snakeyaml]

presto - WHERE? 


== Maven Shell
:incremental!:

tbd WHERE

== Takari Lifecycle
:incremental!:

tbd add details

incremental build library

== Incremental Example
:incremental!:

Example of to make incremental plugin (antlr build)

== Maven Testing Tools and Beyond
:incremental!:

test project generator from dot files

proto plugin - archetype replacement - maybe

== Plugin Testing
:incremental!:

plugin testing framework including IDE support

== Plugin Testing Examples
:incremental!:

Android Maven Plugin and NDK Plugin

== Generations
:incremental!:

maybe .. depending on status, at least update what is there and what is coming

== Maven Development Tools
:incremental!:

Awesome for Maven dev and plugin dev

== Eclipse and M2e
:incremental!:

* including polyglot extensions from Fred
* Maven dev tools
* Maybe some web app

== IntelliJ
:incremental!:

IntelliJ - change request, push Jetbrains 

== Netbeans
:incremental!:

?? tbd - download and check it out

== Central Repository - Now

* HTTPS
* international, high performance CDN
* supported by Sonatype

== Central Repository - Next

* https://http2.github.io/[HTTP/2] (evolved SPDY)
* Additional hosted at Google Cloud Storage
* TBD

== Other Cool Stuff
:incremental!:

Lots of things happening: 

* Docker Maven Plugins from https://github.com/spotify/docker-maven-plugin[spotify] and others
* http://simpligility.github.io/android-maven-plugin/[Android Maven Plugin] and beyond
* https://github.com/maven-nar[Maven NAR] 
* Various JS and web development related plugins
* https://github.com/simpligility/maven-repository-tools[Maven Repository Tools]
* flatten-maven-plugin

== Summary
:incremental!:

tbd


== Next?
:incremental!:

Join us for a Maven Hangout On Air

* Demo your solution or tip
* Ask your question
* Discuss user questions
* And developer questions

== The End 
:incremental!:

Questions, Remarks &  Discussion

TIP: Slides and examples at http://github.com/takari/javaone2015[http://github.com/takari/javaone2015]

== Other Resources
:incremental:

* http://takari.io/book/index.html[TEAM documentation]

